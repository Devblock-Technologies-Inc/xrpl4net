<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Xrp4Net.WebApplication.Demo</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
    <link rel="stylesheet" href="~/css/jquery-steps.min.css">
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container">
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page="/Index">Home</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2022 - Send XRP
        </div>
    </footer>
    
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/lib/jquery-steps/jquery-steps.js"></script>
    <script src="~/lib/js-render/jsrender.js"></script>

    <script type="text/javascript">
        $(document).ready(function() {
            $("#btnGetCredentails").click(function () {
                $.ajax({
                    type: "GET",
                    url: "https://localhost:44391/api/xrp4net/Account/get-credentails",
                    beforeSend: function (xhr) {
                        $("#accountInfo").html('');
                        reset();
                    },
                    success: function (response) {
                        $("#accountInfo").html($("#accountInfoTemplate").render(response));
                        $("#hdfNextStep2").val('true');
                    },
                    failure: function (response) {

                    },
                    error: function (response) {
                    }
                });
            });

            $("#btnConnect").click(function () {
                $("#txtConnectionStatus").val('Connecting');
                $("#hdfNextStep3").val('false');
                setTimeout(function (){
                  $("#txtConnectionStatus").val('Connected');
                  $("#hdfNextStep3").val('true');
                }, 1000);
            });

            $("#btnPrepare").click(function () {
                $.ajax({
                    type: "GET",
                    url: "https://localhost:44391/api/xrp4net/Transaction/construct-payment?classicAddress=" + $("#txtAddress").val() + "&amount=" + (parseInt($("#xrp-amount").val()) * 1000000),
                    beforeSend: function (xhr) {
                        $("#paymentConstruction").html('');
                        $("#hdfNextStep4").val('false');
                    },
                    success: function (response) {
                        var prettyJson = JSON.stringify(response,undefined, 2);
                        $("#paymentConstruction").html($("#paymentTemplate").render(response));
                        $("#payment-construct").text(prettyJson);
                        $("#hdfNextStep4").val('true');
                    },
                    failure: function (response) {
                        
                    },
                    error: function (response) {
                        
                    }
                });
            });

            $("#btnSign").click(function () {
                var payment = JSON.parse($("#payment-construct").text());
                $.ajax({
                    type: "POST",
                    url: "https://localhost:44391/api/xrp4net/Transaction/sign",
                    contentType: "application/json; charset=utf-8",  
                    dataType: "json",
                    data: JSON.stringify({ 
                        account: payment.account,
                        amount: payment.amount,
                        destination: payment.destination,
                        fee: payment.fee,
                        flags: payment.flags,
                        sequence: payment.sequence,
                        transactionType: payment.transactionType,
                        secret: $("#txtSecret").val()
                    }),
                    beforeSend: function (xhr) {
                        $("#signTransaction").html('');
                        $("#hdfNextStep5").val('false');
                    },
                    success: function (response) {
                        $("#signTransaction").html($("#signTransactionTemplate").render(response));
                        $("#hdfNextStep5").val('true');
                    },
                    failure: function (response) {

                    },
                    error: function (response) {
                    }
                });
            });

            $("#btnSubmit").click(function () {
                var payment = JSON.parse($("#payment-construct").text());
                $.ajax({
                    type: "POST",
                    url: "https://localhost:44391/api/xrp4net/Transaction/submit",
                    contentType: "application/json; charset=utf-8",  
                    dataType: "json",
                    data: JSON.stringify({ 
                        account: payment.account,
                        amount: payment.amount,
                        destination: payment.destination,
                        fee: payment.fee,
                        flags: payment.flags,
                        sequence: payment.sequence,
                        transactionType: payment.transactionType,
                        secret: $("#txtSecret").val()
                    }),
                    beforeSend: function (xhr) {
                        $("#submitTransaction").html('');
                        $("#waitResult").html('');
                        $("#hdfNextStep6").val('false');
                    },
                    success: function (response) {
                        var prettyJson = JSON.stringify(response,undefined,2);
                        $("#submitTransaction").html($("#submitTransactionTemplate").render(response));
                        $("#submit-result").text(prettyJson);
                        $("#waitResult").html($("#waitTemplate").render(response));
                        $("#hdfNextStep6").val('true');
                        $("#hdfNextStep7").val('true');
                    },
                    failure: function (response) {

                    },
                    error: function (response) {
                    }
                });
            });

            $("#btnCheck").click(function () {
                $.ajax({
                    type: "GET",
                    url: "https://localhost:44391/api/xrp4net/Transaction/check?hash=" + $("#txtTransactionID").val(),
                    beforeSend: function (xhr) {
                        $("#checkResult").html('');
                        $("#hdfNextStep7").val('false');
                    },
                    success: function (response) {
                        $("#checkResult").html($("#checkTemplate").render(response));
                        $("#hdfNextStep7").val('true');
                    },
                    failure: function (response) {
                        
                    },
                    error: function (response) {
                        
                    }
                });
            });
        });

        $('#send-xrp').steps({
            onChange: function (currentIndex, newIndex, stepDirection) {

                if (currentIndex === 0) {
                    if (stepDirection === 'forward' || stepDirection === 'none') {
                        return $("#hdfNextStep2").val() === 'true';
                    }
                }

                if (currentIndex === 1) {
                    if (stepDirection === 'forward' || stepDirection === 'none') {
                        return $("#hdfNextStep3").val() === 'true';
                    }
                }

                if (currentIndex === 2) {
                    if (stepDirection === 'forward' || stepDirection === 'none') {
                        return $("#hdfNextStep4").val() === 'true';
                    }
                }

                if (currentIndex === 3) {
                    if (stepDirection === 'forward' || stepDirection === 'none') {
                        return $("#hdfNextStep5").val() === 'true';
                    }
                }

                if (currentIndex === 4) {
                    if (stepDirection === 'forward' || stepDirection === 'none') {
                        return $("#hdfNextStep6").val() === 'true';
                    }
                }

                if (currentIndex === 5) {
                    if (stepDirection === 'forward' || stepDirection === 'none') {
                        return $("#hdfNextStep7").val() === 'true';
                    }
                }

                return true;
            },
            showFooterButtons: false,
            onFinish: function () {

            }
        });

        function reset() {
            $("#hdfNextStep2").val('false');
            $("#hdfNextStep3").val('false');
            $("#hdfNextStep4").val('false');
            $("#hdfNextStep5").val('false');
            $("#hdfNextStep6").val('false');
            $("#hdfNextStep7").val('false');

            $("#accountInfo").html('');
            $("#paymentConstruction").html('');
            $("#signTransaction").html('');
            $("#submitTransaction").html('');
            $("#waitResult").html('');
            $("#checkResult").html('');
        }
    </script>

    <script id="accountInfoTemplate" type="text/x-jsrender">
        <form>
            <div class="form-group row">
                <label class="col-sm-2 col-form-label">Address</label>
                <div class="col-sm-10">
                    <input id="txtAddress" type="text" readonly class="form-control-plaintext" value="{{>account.classicAddress}}" />
                </div>
            </div>
            <div class="form-group row">
                <label class="col-sm-2 col-form-label">Secret</label>
                <div class="col-sm-10">
                    <input id="txtSecret" type="text" readonly class="form-control-plaintext" value="{{>secret}}" />
                </div>
            </div>
            <div class="form-group row">
                <label class="col-sm-2 col-form-label">Balance</label>
                <div class="col-sm-10">
                    <input type="text" readonly class="form-control-plaintext" value="{{>amount}} XRP" />
                </div>
            </div>
        </form>
    </script>

    <script id="paymentTemplate" type="text/x-jsrender">
        <div class="form-group">
            <label>Prepared transaction instructions</label>
            <pre id="payment-construct">
            </pre>
        </div>
    </script>

    <script id="signTransactionTemplate" type="text/x-jsrender">
        <form>
            <div class="form-group row">
                <label class="col-sm-3 col-form-label">Signed Transaction blob</label>
                <div class="col-sm-9">
                    <code style="overflow-wrap: anywhere; word-wrap: anywhere">
                        {{>txtBlob}}
                    </code>
                </div>
            </div>
            <div class="form-group row">
                <label class="col-sm-3 col-form-label">Identifying hash</label>
                <div class="col-sm-9">
                    <input type="text" readonly class="form-control-plaintext" value="{{>hash}}" />
                </div>
            </div>
        </form>
    </script>

    <script id="submitTransactionTemplate" type="text/x-jsrender">
        <div class="form-group">
            <label>Preliminary result</label>
            <pre id="submit-result">
            </pre>
        </div>
    </script>

    <script id="waitTemplate" type="text/x-jsrender">
        <form>
            <div class="form-group row">
                <label class="col-sm-4 col-form-label">Transaction ID</label>
                <div class="col-sm-8">
                    <input type="text" id="txtTransactionID" readonly class="form-control-plaintext" value="{{>tx_json.hash}}" />
                </div>
            </div>
            <div class="form-group row">
                <label class="col-sm-4 col-form-label">Latest Validated Ledger Index</label>
                <div class="col-sm-8">
                    <input type="text" readonly class="form-control-plaintext" value="" />
                </div>
            </div>
            <div class="form-group row">
                <label class="col-sm-4 col-form-label">Ledger Index at Time of Submission</label>
                <div class="col-sm-8">
                    <input type="text" readonly class="form-control-plaintext" value="{{>validated_ledger_index}}" />
                </div>
            </div>
            <div class="form-group row">
                <label class="col-sm-4 col-form-label">Transaction LastLedgerSequence</label>
                <div class="col-sm-8">
                    <input type="text" readonly class="form-control-plaintext" value="{{>tx_json.lastLedgerSequence}}" />
                </div>
            </div>
            <div class="form-group row">
                <label class="col-sm-4 col-form-label">Final Result</label>
                <div class="col-sm-8">
                    <input type="text" readonly class="form-control-plaintext" value="{{>engine_result}}" />
                </div>
            </div>
        </form>
    </script>

    <script id="checkTemplate" type="text/x-jsrender">
        <form>
            <div class="form-group row">
                <label class="col-sm-3 col-form-label">Transaction result code</label>
                <div class="col-sm-9">
                    <input type="text" readonly class="form-control-plaintext" value="{{>result.meta.transactionResult}}" />
                </div>
            </div>
        </form>

        <div class="form-group">
            <label>Balance changes</label>
            <pre>
                <code></code>
            </pre>
        </div>
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
